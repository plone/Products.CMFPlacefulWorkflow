<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      lang="en"
      metal:use-macro="context/main_template/macros/master"
      xml:lang="en"
      i18n:domain="cmfplacefulworkflow"
>

  <metal:main metal:fill-slot="main"
              tal:define="
                wf_list context/portal_workflow/objectIds;
                pwtool context/portal_placeful_workflow;
                config python: pwtool.getWorkflowPolicyConfig(context);
                siteroot python: pwtool.isSiteRoot(context);
              "
  >
    <header>
      <h1 i18n:translate="heading_workflow_policies">
          Workflow policies' local configuration management
      </h1>

      <p class="lead"
         i18n:translate="description_workflow_policies"
      >
          Set your workflow policies' local configuration for this folder and below.
      </p>
    </header>

    <div id="content-core">
      <tal:site tal:condition="siteroot">

        <div class="alert alert-warning mb-5"
             i18n:translate=""
        >
          You are viewing the root of your site. Local workflow
          configuration is only available in subfolders of your site.
        </div>

      </tal:site>

      <tal:nosite tal:condition="not:siteroot">

        <form action="@@placeful-workflow-configuration"
              method="POST"
              tal:condition="python:not config and context.isPrincipiaFolderish"
        >
          <button class="btn btn-primary"
                  name="add_wp_for_type"
                  type="submit"
                  i18n:translate="description_add_workflow_policy_for_type"
          >
            Add a workflow policy's local configuration in the
            <span tal:replace="python:context.translate(context.portal_type)"
                  i18n:name="portal_type"
            >portal type</span>
          </button>
        </form>

        <form action="@@placeful-workflow-configuration"
              method="POST"
              tal:condition="python:not context.isPrincipiaFolderish and context is not container"
        >
          <button class="btn btn-primary"
                  name="add_wp_local_config"
                  type="submit"
                  i18n:translate="description_add_workflow_policy"
          >
            Add Workflow policy's local configuration
          </button>
        </form>

        <form id="edit_form"
              action="${context/absolute_url}/@@placeful-workflow-configuration"
              method="POST"
              name="edit_form"
              tal:condition="config"
        >

          <tal:defines tal:define="
                         policies pwtool/getWorkflowPolicyInfos;
                         policy_in_id config/getPolicyInId;
                         policy_below_id config/getPolicyBelowId;
                       ">

            <h3 i18n:translate="legend_publishing_details">Workflow policies</h3>

            <strong i18n:translate="label_in_this_folder">For this Folder</strong>

            <div class="mb-3 form-text"
                 i18n:translate="description_in_this_folder"
            >
            Modify the workflows of this folder and below. If you don't want
            to modify the workflow of this Folder use 'Below this Folder' section.
            </div>

            <div class="mb-3 form-check"
                 tal:repeat="policy policies"
            >

              <input class="form-check-input"
                     id="cb_policy"
                     name="policy_in"
                     type="radio"
                     value="policy"
                     tal:attributes="
                       id python: 'cb_policy_' + policy['id'];
                       value policy/id;
                       checked python: policy['id'] == policy_in_id;
                     "
              />

              <label class="form-check-label"
                     for="cb_policy"
                     tal:content="policy/title"
                     tal:attributes="
                       for python: 'cb_policy_' + policy['id'];
                     "
                     i18n:domain="cmfplacefulworkflow"
                     i18n:translate=""
              >Policy Label</label>

              <div class="form-text"
                   tal:condition="policy/description"
                   tal:content="policy/description"
              >Workflow policy description</div>

            </div>

            <div class="mb-3 form-check">

              <input class="form-check-input"
                     id="cb_default_policy"
                     checked="checked"
                     name="policy_in"
                     title=""
                     type="radio"
                     tal:attributes="
                       value python:'';
                       checked not:config/getPolicyIn;
                     "
              />

              <label class="form-check-label"
                     for="cb_default_policy"
                     i18n:translate="label_default_policy"
              >Default Policy</label>

              <div class="form-text"
                   i18n:translate="help_default_workflow_policy"
              >
              The default workflow policy.
              </div>

            </div>

            <strong i18n:translate="label_below_this_folder">Below this Folder</strong>

            <div class="mb-3 form-text"
                 i18n:translate="description_below_this_folder"
            >
            Modify the workflows only below this Folder. If you want to
            modify the workflow of this Folder use 'For this Folder' section.
            </div>

            <div class="mb-3 form-check"
                 tal:repeat="policy policies"
            >

              <input class="form-check-input"
                     id="cb_policy"
                     name="policy_below"
                     type="radio"
                     value="policy"
                     tal:attributes="
                       id python: 'cb_policy_below_' + policy['id'];
                       value policy/id;
                       checked python: policy['id'] == policy_below_id;
                     "
              />

              <label class="form-check-label"
                     for="cb_policy"
                     tal:content="policy/title"
                     tal:attributes="
                       for python: 'cb_policy_below_' + policy['id'];
                     "
                     i18n:domain="cmfplacefulworkflow"
                     i18n:translate=""
              >Policy Label</label>

              <div class="form-text"
                   tal:content="policy/description"
              >
              Workflow policy description
              </div>

            </div>

            <div class="mb-3 form-check">

              <input class="form-check-input"
                     id="cb_default_policy_below"
                     checked="1"
                     name="policy_below"
                     title=""
                     type="radio"
                     tal:attributes="
                       value python:'';
                       checked not: config/getPolicyBelow;
                     "
              />

              <label class="form-check-label"
                     for="cb_default_policy_below"
                     i18n:translate="label_default_policy"
              >Default Policy</label>

              <div class="form-text"
                   i18n:translate="help_default_workflow_policy"
              >
              The default workflow policy.
              </div>

            </div>

            <strong i18n:translate="label_update_security">Update security</strong>

            <div class="mb-3 form-text"
                 i18n:translate="description_update_security"
            >
            Update catalog security (update role mappings). Note that updating catalog
            security might be a very long operation if there are a lot of brains to be
            re-indexed. This operation can be done afterwards as a separate upgrade step.
            </div>

            <div class="mb-3 form-check">

              <input class="form-check-input"
                     id="cb_update_security"
                     checked="checked"
                     name="update_security"
                     type="checkbox"
                     value="update_security"
              />

              <label class="form-check-label"
                     for="cb_update_security"
                     i18n:domain="cmfplacefulworkflow"
                     i18n:translate=""
              >Update catalog role mappings</label>

            </div>

            <div class="mb-3"
                 i18n:domain="plone"
            >

              <input class="btn btn-primary"
                     name="submit"
                     type="submit"
                     value="Save"
                     i18n:attributes="value label_save;"
              />

              <input class="btn btn-secondary"
                     name="submit"
                     type="submit"
                     value="Cancel"
                     i18n:attributes="value label_cancel;"
              />
            </div>

          </tal:defines>
        </form>

      </tal:nosite>
    </div>

  </metal:main>
</html>
